{:use-macros nil, :excludes #{}, :name alandipert.storage-atom, :imports nil, :requires {t cognitect.transit, cognitect.transit cognitect.transit, timer goog.Timer, goog.Timer goog.Timer, string clojure.string, clojure.string clojure.string}, :uses nil, :defs {load-session-storage {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/out/alandipert/storage_atom.cljs", :line 110, :column 7, :end-line 110, :end-column 27, :arglists (quote ([k]))}, :name alandipert.storage-atom/load-session-storage, :variadic false, :file "out/alandipert/storage_atom.cljs", :end-column 27, :method-params ([k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 110, :end-line 110, :max-fixed-arity 1, :fn-var true, :arglists (quote ([k]))}, ->StorageBackend {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/out/alandipert/storage_atom.cljs", :line 22, :column 10, :end-line 22, :end-column 24, :protocols #{alandipert.storage-atom/IStorageBackend}, :skip-protocol-flag nil, :factory :positional, :arglists (quote ([store key]))}, :protocols #{alandipert.storage-atom/IStorageBackend}, :name alandipert.storage-atom/->StorageBackend, :variadic false, :file "out/alandipert/storage_atom.cljs", :end-column 24, :method-params ([store key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 22, :end-line 22, :max-fixed-arity 2, :fn-var true, :arglists (quote ([store key])), :skip-protocol-flag nil}, local-storage {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/out/alandipert/storage_atom.cljs", :line 120, :column 7, :end-line 120, :end-column 20, :arglists (quote ([atom k]))}, :name alandipert.storage-atom/local-storage, :variadic false, :file "out/alandipert/storage_atom.cljs", :end-column 20, :method-params ([atom k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 120, :end-line 120, :max-fixed-arity 2, :fn-var true, :arglists (quote ([atom k]))}, storage-delay {:name alandipert.storage-atom/storage-delay, :file "out/alandipert/storage_atom.cljs", :line 42, :column 1, :end-line 42, :end-column 19, :meta {:file "/Users/amiralirajan/Projects/mokepon/out/alandipert/storage_atom.cljs", :line 42, :column 6, :end-line 42, :end-column 19}, :doc "Delay in ms before a change is committed to the local storage. If a\nnew change occurs before the time is elapsed, the old change is\ndiscarded an only the new one is committed."}, -get {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/out/alandipert/storage_atom.cljs", :line 19, :column 4, :end-line 19, :end-column 8, :protocol alandipert.storage-atom/IStorageBackend, :doc nil, :arglists (quote ([this not-found]))}, :protocol alandipert.storage-atom/IStorageBackend, :name alandipert.storage-atom/-get, :variadic false, :file "out/alandipert/storage_atom.cljs", :end-column 8, :method-params ([this not-found]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 19, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this not-found])), :doc nil}, remove-local-storage! {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/out/alandipert/storage_atom.cljs", :line 151, :column 7, :end-line 151, :end-column 28, :arglists (quote ([k]))}, :name alandipert.storage-atom/remove-local-storage!, :variadic false, :file "out/alandipert/storage_atom.cljs", :end-column 28, :method-params ([k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 151, :end-line 151, :max-fixed-arity 1, :fn-var true, :arglists (quote ([k]))}, link-storage {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/out/alandipert/storage_atom.cljs", :line 84, :column 7, :end-line 84, :end-column 19, :arglists (quote ([atom storage k]))}, :name alandipert.storage-atom/link-storage, :variadic false, :file "out/alandipert/storage_atom.cljs", :end-column 19, :method-params ([atom storage k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 84, :end-line 84, :max-fixed-arity 3, :fn-var true, :arglists (quote ([atom storage k]))}, store {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/out/alandipert/storage_atom.cljs", :line 53, :column 7, :end-line 53, :end-column 12, :arglists (quote ([atom backend]))}, :name alandipert.storage-atom/store, :variadic false, :file "out/alandipert/storage_atom.cljs", :end-column 12, :method-params ([atom backend]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 2, :fn-var true, :arglists (quote ([atom backend]))}, remove-html-storage! {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/out/alandipert/storage_atom.cljs", :line 143, :column 7, :end-line 143, :end-column 27, :arglists (quote ([storage k])), :doc "Remove key from storage and also trigger an event on the current\n  window so its atoms will be cleared as well."}, :name alandipert.storage-atom/remove-html-storage!, :variadic false, :file "out/alandipert/storage_atom.cljs", :end-column 27, :method-params ([storage k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 143, :end-line 143, :max-fixed-arity 2, :fn-var true, :arglists (quote ([storage k])), :doc "Remove key from storage and also trigger an event on the current\n  window so its atoms will be cleared as well."}, maybe-update-backend {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/out/alandipert/storage_atom.cljs", :line 68, :column 7, :end-line 68, :end-column 27, :arglists (quote ([atom storage k default e]))}, :name alandipert.storage-atom/maybe-update-backend, :variadic false, :file "out/alandipert/storage_atom.cljs", :end-column 27, :method-params ([atom storage k default e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 68, :end-line 68, :max-fixed-arity 5, :fn-var true, :arglists (quote ([atom storage k default e]))}, transit-read-handlers {:name alandipert.storage-atom/transit-read-handlers, :file "out/alandipert/storage_atom.cljs", :line 7, :column 1, :end-line 7, :end-column 27, :meta {:file "/Users/amiralirajan/Projects/mokepon/out/alandipert/storage_atom.cljs", :line 7, :column 6, :end-line 7, :end-column 27}}, clear-html-storage! {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/out/alandipert/storage_atom.cljs", :line 130, :column 7, :end-line 130, :end-column 26, :arglists (quote ([storage])), :doc "Clear storage and also trigger an event on the current window\n  so its atoms will be cleared as well."}, :name alandipert.storage-atom/clear-html-storage!, :variadic false, :file "out/alandipert/storage_atom.cljs", :end-column 26, :method-params ([storage]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 130, :end-line 130, :max-fixed-arity 1, :fn-var true, :arglists (quote ([storage])), :doc "Clear storage and also trigger an event on the current window\n  so its atoms will be cleared as well."}, clear-local-storage! {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/out/alandipert/storage_atom.cljs", :line 137, :column 7, :end-line 137, :end-column 27, :arglists (quote ([]))}, :name alandipert.storage-atom/clear-local-storage!, :variadic false, :file "out/alandipert/storage_atom.cljs", :end-column 27, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 137, :end-line 137, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, *storage-delay* {:name alandipert.storage-atom/*storage-delay*, :file "out/alandipert/storage_atom.cljs", :line 48, :column 1, :end-line 48, :end-column 31, :dynamic true, :meta {:file "/Users/amiralirajan/Projects/mokepon/out/alandipert/storage_atom.cljs", :line 48, :column 16, :end-line 48, :end-column 31, :dynamic true}}, transit-write-handlers {:name alandipert.storage-atom/transit-write-handlers, :file "out/alandipert/storage_atom.cljs", :line 9, :column 1, :end-line 9, :end-column 28, :meta {:file "/Users/amiralirajan/Projects/mokepon/out/alandipert/storage_atom.cljs", :line 9, :column 6, :end-line 9, :end-column 28}}, *watch-active* {:name alandipert.storage-atom/*watch-active*, :file "out/alandipert/storage_atom.cljs", :line 50, :column 1, :end-line 50, :end-column 30, :dynamic true, :meta {:file "/Users/amiralirajan/Projects/mokepon/out/alandipert/storage_atom.cljs", :line 50, :column 16, :end-line 50, :end-column 30, :dynamic true}}, load-html-storage {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/out/alandipert/storage_atom.cljs", :line 103, :column 7, :end-line 103, :end-column 24, :arglists (quote ([storage k]))}, :name alandipert.storage-atom/load-html-storage, :variadic false, :file "out/alandipert/storage_atom.cljs", :end-column 24, :method-params ([storage k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 103, :end-line 103, :max-fixed-arity 2, :fn-var true, :arglists (quote ([storage k]))}, html-storage {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/out/alandipert/storage_atom.cljs", :line 115, :column 7, :end-line 115, :end-column 19, :arglists (quote ([atom storage k]))}, :name alandipert.storage-atom/html-storage, :variadic false, :file "out/alandipert/storage_atom.cljs", :end-column 19, :method-params ([atom storage k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 115, :end-line 115, :max-fixed-arity 3, :fn-var true, :arglists (quote ([atom storage k]))}, load-local-storage {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/out/alandipert/storage_atom.cljs", :line 107, :column 7, :end-line 107, :end-column 25, :arglists (quote ([k]))}, :name alandipert.storage-atom/load-local-storage, :variadic false, :file "out/alandipert/storage_atom.cljs", :end-column 25, :method-params ([k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 107, :end-line 107, :max-fixed-arity 1, :fn-var true, :arglists (quote ([k]))}, StorageBackend {:num-fields 2, :protocols #{alandipert.storage-atom/IStorageBackend}, :name alandipert.storage-atom/StorageBackend, :file "out/alandipert/storage_atom.cljs", :end-column 24, :type true, :column 10, :line 22, :record false, :end-line 22, :skip-protocol-flag nil}, clj->json {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/out/alandipert/storage_atom.cljs", :line 11, :column 7, :end-line 11, :end-column 16, :arglists (quote ([x]))}, :name alandipert.storage-atom/clj->json, :variadic false, :file "out/alandipert/storage_atom.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, remove-session-storage! {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/out/alandipert/storage_atom.cljs", :line 154, :column 7, :end-line 154, :end-column 30, :arglists (quote ([k]))}, :name alandipert.storage-atom/remove-session-storage!, :variadic false, :file "out/alandipert/storage_atom.cljs", :end-column 30, :method-params ([k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 154, :end-line 154, :max-fixed-arity 1, :fn-var true, :arglists (quote ([k]))}, clear-session-storage! {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/out/alandipert/storage_atom.cljs", :line 140, :column 7, :end-line 140, :end-column 29, :arglists (quote ([]))}, :name alandipert.storage-atom/clear-session-storage!, :variadic false, :file "out/alandipert/storage_atom.cljs", :end-column 29, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 140, :end-line 140, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, session-storage {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/out/alandipert/storage_atom.cljs", :line 124, :column 7, :end-line 124, :end-column 22, :arglists (quote ([atom k]))}, :name alandipert.storage-atom/session-storage, :variadic false, :file "out/alandipert/storage_atom.cljs", :end-column 22, :method-params ([atom k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 124, :end-line 124, :max-fixed-arity 2, :fn-var true, :arglists (quote ([atom k]))}, IStorageBackend {:meta {:file "/Users/amiralirajan/Projects/mokepon/out/alandipert/storage_atom.cljs", :line 17, :column 14, :end-line 17, :end-column 29, :doc "Represents a storage resource.", :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {-get [[this not-found]], -commit! [[this value]]}}}, :protocol-symbol true, :name alandipert.storage-atom/IStorageBackend, :file "out/alandipert/storage_atom.cljs", :end-column 29, :column 1, :line 17, :protocol-info {:methods {-get [[this not-found]], -commit! [[this value]]}}, :info nil, :end-line 17, :impls #{alandipert.storage-atom/StorageBackend}, :doc "Represents a storage resource.", :jsdoc ("@interface")}, debounce-factory {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/out/alandipert/storage_atom.cljs", :line 32, :column 7, :end-line 32, :end-column 23, :arglists (quote ([])), :doc "Return a function that will always store a future call into the\n  same atom. If recalled before the time is elapsed, the call is\n  replaced without being executed."}, :name alandipert.storage-atom/debounce-factory, :variadic false, :file "out/alandipert/storage_atom.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Return a function that will always store a future call into the\n  same atom. If recalled before the time is elapsed, the call is\n  replaced without being executed."}, json->clj {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/out/alandipert/storage_atom.cljs", :line 14, :column 7, :end-line 14, :end-column 16, :arglists (quote ([x]))}, :name alandipert.storage-atom/json->clj, :variadic false, :file "out/alandipert/storage_atom.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, -commit! {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/out/alandipert/storage_atom.cljs", :line 20, :column 4, :end-line 20, :end-column 12, :protocol alandipert.storage-atom/IStorageBackend, :doc "Commit value to storage at location.", :arglists (quote ([this value]))}, :protocol alandipert.storage-atom/IStorageBackend, :name alandipert.storage-atom/-commit!, :variadic false, :file "out/alandipert/storage_atom.cljs", :end-column 12, :method-params ([this value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 20, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this value])), :doc "Commit value to storage at location."}, dispatch-remove-event! {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/out/alandipert/storage_atom.cljs", :line 90, :column 7, :end-line 90, :end-column 29, :arglists (quote ([storage key])), :doc "Create and dispatch a synthetic StorageEvent. Expects key to be a string.\n  An empty key indicates that all storage is being cleared."}, :name alandipert.storage-atom/dispatch-remove-event!, :variadic false, :file "out/alandipert/storage_atom.cljs", :end-column 29, :method-params ([storage key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 90, :end-line 90, :max-fixed-arity 2, :fn-var true, :arglists (quote ([storage key])), :doc "Create and dispatch a synthetic StorageEvent. Expects key to be a string.\n  An empty key indicates that all storage is being cleared."}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:alandipert.storage-atom/none key store :handlers :alandipert.storage-atom/storage-watch :json}, :order [:json :handlers store key :alandipert.storage-atom/none :alandipert.storage-atom/storage-watch]}, :doc nil}