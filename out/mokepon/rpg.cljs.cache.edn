{:use-macros nil, :excludes #{}, :name mokepon.rpg, :imports nil, :requires nil, :uses nil, :defs {is-dead? {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/src/mokepon/rpg.cljs", :line 33, :column 7, :end-line 33, :end-column 15, :arglists (quote ([monster]))}, :name mokepon.rpg/is-dead?, :variadic false, :file "src/mokepon/rpg.cljs", :end-column 15, :method-params ([monster]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([monster]))}, tick-monster {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/src/mokepon/rpg.cljs", :line 39, :column 7, :end-line 39, :end-column 19, :arglists (quote ([monster]))}, :name mokepon.rpg/tick-monster, :variadic false, :file "src/mokepon/rpg.cljs", :end-column 19, :method-params ([monster]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 1, :fn-var true, :arglists (quote ([monster]))}, active-turn-threshold {:name mokepon.rpg/active-turn-threshold, :file "src/mokepon/rpg.cljs", :line 27, :column 1, :end-line 27, :end-column 27, :meta {:file "/Users/amiralirajan/Projects/mokepon/src/mokepon/rpg.cljs", :line 27, :column 6, :end-line 27, :end-column 27}}, attack-damage {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/src/mokepon/rpg.cljs", :line 56, :column 7, :end-line 56, :end-column 20, :arglists (quote ([from to]))}, :name mokepon.rpg/attack-damage, :variadic false, :file "src/mokepon/rpg.cljs", :end-column 20, :method-params ([from to]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 56, :end-line 56, :max-fixed-arity 2, :fn-var true, :arglists (quote ([from to]))}, affinities {:name mokepon.rpg/affinities, :file "src/mokepon/rpg.cljs", :line 44, :column 1, :end-line 44, :end-column 16, :meta {:file "/Users/amiralirajan/Projects/mokepon/src/mokepon/rpg.cljs", :line 44, :column 6, :end-line 44, :end-column 16}}, active-turn-percentage {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/src/mokepon/rpg.cljs", :line 29, :column 7, :end-line 29, :end-column 29, :arglists (quote ([{:keys [at]} monster]))}, :name mokepon.rpg/active-turn-percentage, :variadic false, :file "src/mokepon/rpg.cljs", :end-column 29, :method-params ([p__45986 monster]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [at]} monster]))}, can-attack? {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/src/mokepon/rpg.cljs", :line 35, :column 7, :end-line 35, :end-column 18, :arglists (quote ([monster]))}, :name mokepon.rpg/can-attack?, :variadic false, :file "src/mokepon/rpg.cljs", :end-column 18, :method-params ([monster]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 1, :fn-var true, :arglists (quote ([monster]))}, choosable-monsters {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/src/mokepon/rpg.cljs", :line 115, :column 7, :end-line 115, :end-column 25, :arglists (quote ([team]))}, :name mokepon.rpg/choosable-monsters, :variadic false, :file "src/mokepon/rpg.cljs", :end-column 25, :method-params ([team]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 115, :end-line 115, :max-fixed-arity 1, :fn-var true, :arglists (quote ([team]))}, battle-over? {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/src/mokepon/rpg.cljs", :line 20, :column 7, :end-line 20, :end-column 19, :arglists (quote ([chosen battling]))}, :name mokepon.rpg/battle-over?, :variadic false, :file "src/mokepon/rpg.cljs", :end-column 19, :method-params ([chosen battling]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 2, :fn-var true, :arglists (quote ([chosen battling]))}, heal-monster {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/src/mokepon/rpg.cljs", :line 103, :column 7, :end-line 103, :end-column 19, :arglists (quote ([monster]))}, :name mokepon.rpg/heal-monster, :variadic false, :file "src/mokepon/rpg.cljs", :end-column 19, :method-params ([monster]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 103, :end-line 103, :max-fixed-arity 1, :fn-var true, :arglists (quote ([monster]))}, try-attack {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/src/mokepon/rpg.cljs", :line 60, :column 7, :end-line 60, :end-column 17, :arglists (quote ([from to]))}, :name mokepon.rpg/try-attack, :variadic false, :file "src/mokepon/rpg.cljs", :end-column 17, :method-params ([from to]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 2, :fn-var true, :arglists (quote ([from to]))}, attack-description {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/src/mokepon/rpg.cljs", :line 69, :column 7, :end-line 69, :end-column 25, :arglists (quote ([from to]))}, :name mokepon.rpg/attack-description, :variadic false, :file "src/mokepon/rpg.cljs", :end-column 25, :method-params ([from to]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 2, :fn-var true, :arglists (quote ([from to]))}, apply-player-attack {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/src/mokepon/rpg.cljs", :line 81, :column 7, :end-line 81, :end-column 26, :arglists (quote ([chosen battling play-by-play]))}, :name mokepon.rpg/apply-player-attack, :variadic false, :file "src/mokepon/rpg.cljs", :end-column 26, :method-params ([chosen battling play-by-play]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 3, :fn-var true, :arglists (quote ([chosen battling play-by-play]))}, heal-team {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/src/mokepon/rpg.cljs", :line 112, :column 7, :end-line 112, :end-column 16, :arglists (quote ([team]))}, :name mokepon.rpg/heal-team, :variadic false, :file "src/mokepon/rpg.cljs", :end-column 16, :method-params ([team]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 112, :end-line 112, :max-fixed-arity 1, :fn-var true, :arglists (quote ([team]))}, filter-key {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/src/mokepon/rpg.cljs", :line 16, :column 7, :end-line 16, :end-column 17, :arglists (quote ([predicate dict]))}, :name mokepon.rpg/filter-key, :variadic false, :file "src/mokepon/rpg.cljs", :end-column 17, :method-params ([predicate dict]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 2, :fn-var true, :arglists (quote ([predicate dict]))}, new-game {:name mokepon.rpg/new-game, :file "src/mokepon/rpg.cljs", :line 3, :column 1, :end-line 3, :end-column 14, :meta {:file "/Users/amiralirajan/Projects/mokepon/src/mokepon/rpg.cljs", :line 3, :column 6, :end-line 3, :end-column 14}}, apply-to-all-values {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/src/mokepon/rpg.cljs", :line 13, :column 7, :end-line 13, :end-column 26, :arglists (quote ([f dict]))}, :name mokepon.rpg/apply-to-all-values, :variadic false, :file "src/mokepon/rpg.cljs", :end-column 26, :method-params ([f dict]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f dict]))}, reset-team-at {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/src/mokepon/rpg.cljs", :line 109, :column 7, :end-line 109, :end-column 20, :arglists (quote ([team]))}, :name mokepon.rpg/reset-team-at, :variadic false, :file "src/mokepon/rpg.cljs", :end-column 20, :method-params ([team]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 109, :end-line 109, :max-fixed-arity 1, :fn-var true, :arglists (quote ([team]))}, reset-monster-at {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/src/mokepon/rpg.cljs", :line 106, :column 7, :end-line 106, :end-column 23, :arglists (quote ([monster]))}, :name mokepon.rpg/reset-monster-at, :variadic false, :file "src/mokepon/rpg.cljs", :end-column 23, :method-params ([monster]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 106, :end-line 106, :max-fixed-arity 1, :fn-var true, :arglists (quote ([monster]))}, affinity-lookup {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/src/mokepon/rpg.cljs", :line 51, :column 7, :end-line 51, :end-column 22, :arglists (quote ([from to]))}, :name mokepon.rpg/affinity-lookup, :variadic false, :file "src/mokepon/rpg.cljs", :end-column 22, :method-params ([from to]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 2, :fn-var true, :arglists (quote ([from to]))}, tick-battle {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/src/mokepon/rpg.cljs", :line 91, :column 7, :end-line 91, :end-column 18, :arglists (quote ([chosen battling play-by-play]))}, :name mokepon.rpg/tick-battle, :variadic false, :file "src/mokepon/rpg.cljs", :end-column 18, :method-params ([chosen battling play-by-play]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 91, :end-line 91, :max-fixed-arity 3, :fn-var true, :arglists (quote ([chosen battling play-by-play]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:attack-occured? :team-at-home :else :ground :speed :captured :max-hp :name :type :play-by-play :battling :cash :electric :power :team :from :at :grass :hp :items :water :location :chosen-key :outside :to :chosen}, :order [:team-at-home :team :location :chosen-key :cash :battling :items :play-by-play :outside :hp :captured :at :speed :electric :grass :ground :water :type :power :to :from :attack-occured? :name :else :chosen :max-hp]}, :doc nil}