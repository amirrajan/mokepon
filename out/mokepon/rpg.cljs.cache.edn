{:use-macros nil, :excludes #{}, :name mokepon.rpg, :imports nil, :requires nil, :uses nil, :defs {is-dead? {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/src/mokepon/rpg.cljs", :line 26, :column 7, :end-line 26, :end-column 15, :arglists (quote ([monster]))}, :name mokepon.rpg/is-dead?, :variadic false, :file "/Users/amiralirajan/Projects/mokepon/src/mokepon/rpg.cljs", :end-column 15, :method-params ([monster]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 1, :fn-var true, :arglists (quote ([monster]))}, tick-monster {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/src/mokepon/rpg.cljs", :line 32, :column 7, :end-line 32, :end-column 19, :arglists (quote ([monster]))}, :name mokepon.rpg/tick-monster, :variadic false, :file "/Users/amiralirajan/Projects/mokepon/src/mokepon/rpg.cljs", :end-column 19, :method-params ([monster]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 1, :fn-var true, :arglists (quote ([monster]))}, active-turn-threshold {:name mokepon.rpg/active-turn-threshold, :file "/Users/amiralirajan/Projects/mokepon/src/mokepon/rpg.cljs", :line 20, :column 1, :end-line 20, :end-column 27, :meta {:file "/Users/amiralirajan/Projects/mokepon/src/mokepon/rpg.cljs", :line 20, :column 6, :end-line 20, :end-column 27}}, active-turn-percentage {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/src/mokepon/rpg.cljs", :line 22, :column 7, :end-line 22, :end-column 29, :arglists (quote ([{:keys [at]} monster]))}, :name mokepon.rpg/active-turn-percentage, :variadic false, :file "/Users/amiralirajan/Projects/mokepon/src/mokepon/rpg.cljs", :end-column 29, :method-params ([p__36637 monster]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [at]} monster]))}, can-attack? {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/src/mokepon/rpg.cljs", :line 28, :column 7, :end-line 28, :end-column 18, :arglists (quote ([monster]))}, :name mokepon.rpg/can-attack?, :variadic false, :file "/Users/amiralirajan/Projects/mokepon/src/mokepon/rpg.cljs", :end-column 18, :method-params ([monster]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 1, :fn-var true, :arglists (quote ([monster]))}, battle-over? {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/src/mokepon/rpg.cljs", :line 13, :column 7, :end-line 13, :end-column 19, :arglists (quote ([chosen battling]))}, :name mokepon.rpg/battle-over?, :variadic false, :file "/Users/amiralirajan/Projects/mokepon/src/mokepon/rpg.cljs", :end-column 19, :method-params ([chosen battling]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 2, :fn-var true, :arglists (quote ([chosen battling]))}, heal-monster {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/src/mokepon/rpg.cljs", :line 71, :column 7, :end-line 71, :end-column 19, :arglists (quote ([monster]))}, :name mokepon.rpg/heal-monster, :variadic false, :file "/Users/amiralirajan/Projects/mokepon/src/mokepon/rpg.cljs", :end-column 19, :method-params ([monster]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 71, :end-line 71, :max-fixed-arity 1, :fn-var true, :arglists (quote ([monster]))}, try-attack {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/src/mokepon/rpg.cljs", :line 37, :column 7, :end-line 37, :end-column 17, :arglists (quote ([from to]))}, :name mokepon.rpg/try-attack, :variadic false, :file "/Users/amiralirajan/Projects/mokepon/src/mokepon/rpg.cljs", :end-column 17, :method-params ([from to]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 2, :fn-var true, :arglists (quote ([from to]))}, attack-description {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/src/mokepon/rpg.cljs", :line 44, :column 7, :end-line 44, :end-column 25, :arglists (quote ([from to]))}, :name mokepon.rpg/attack-description, :variadic false, :file "/Users/amiralirajan/Projects/mokepon/src/mokepon/rpg.cljs", :end-column 25, :method-params ([from to]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 2, :fn-var true, :arglists (quote ([from to]))}, apply-player-attack {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/src/mokepon/rpg.cljs", :line 49, :column 7, :end-line 49, :end-column 26, :arglists (quote ([chosen battling play-by-play]))}, :name mokepon.rpg/apply-player-attack, :variadic false, :file "/Users/amiralirajan/Projects/mokepon/src/mokepon/rpg.cljs", :end-column 26, :method-params ([chosen battling play-by-play]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 3, :fn-var true, :arglists (quote ([chosen battling play-by-play]))}, heal-team {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/src/mokepon/rpg.cljs", :line 74, :column 7, :end-line 74, :end-column 16, :arglists (quote ([team]))}, :name mokepon.rpg/heal-team, :variadic false, :file "/Users/amiralirajan/Projects/mokepon/src/mokepon/rpg.cljs", :end-column 16, :method-params ([team]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 74, :end-line 74, :max-fixed-arity 1, :fn-var true, :arglists (quote ([team]))}, new-game {:name mokepon.rpg/new-game, :file "/Users/amiralirajan/Projects/mokepon/src/mokepon/rpg.cljs", :line 3, :column 1, :end-line 3, :end-column 14, :meta {:file "/Users/amiralirajan/Projects/mokepon/src/mokepon/rpg.cljs", :line 3, :column 6, :end-line 3, :end-column 14}}, tick-battle {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/src/mokepon/rpg.cljs", :line 59, :column 7, :end-line 59, :end-column 18, :arglists (quote ([chosen battling play-by-play]))}, :name mokepon.rpg/tick-battle, :variadic false, :file "/Users/amiralirajan/Projects/mokepon/src/mokepon/rpg.cljs", :end-column 18, :method-params ([chosen battling play-by-play]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 3, :fn-var true, :arglists (quote ([chosen battling play-by-play]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:attack-occured? :team-at-home :speed :captured :max-hp :name :play-by-play :battling :cash :team :from :at :hp :items :location :chosen-key :outside :to :chosen}, :order [:team-at-home :team :location :chosen-key :cash :battling :items :play-by-play :outside :hp :captured :at :speed :to :from :attack-occured? :name :chosen :max-hp]}, :doc nil}