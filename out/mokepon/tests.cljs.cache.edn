{:use-macros {testing cljs.test, is cljs.test, deftest cljs.test, use-fixtures cljs.test, run-tests cljs.test}, :excludes #{}, :name mokepon.tests, :imports nil, :requires {cljs.test cljs.test, mon mokepon.monsters, mokepon.monsters mokepon.monsters, rpg mokepon.rpg, mokepon.rpg mokepon.rpg, itm mokepon.items, mokepon.items mokepon.items, tnr mokepon.container, mokepon.container mokepon.container}, :uses nil, :defs {purchasing-item {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/src/mokepon/tests.cljs", :line 107, :column 10, :end-line 107, :end-column 25}, :name mokepon.tests/purchasing-item, :variadic false, :file "/Users/amiralirajan/Projects/mokepon/src/mokepon/tests.cljs", :end-column 25, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 107, :end-line 107, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, log {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/src/mokepon/tests.cljs", :line 10, :column 7, :end-line 10, :end-column 10, :arglists (quote ([o]))}, :name mokepon.tests/log, :variadic false, :file "/Users/amiralirajan/Projects/mokepon/src/mokepon/tests.cljs", :end-column 10, :method-params ([o]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([o]))}, water-mokepon-do-normal-damage-to-electric {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/src/mokepon/tests.cljs", :line 150, :column 10, :end-line 150, :end-column 52}, :name mokepon.tests/water-mokepon-do-normal-damage-to-electric, :variadic false, :file "/Users/amiralirajan/Projects/mokepon/src/mokepon/tests.cljs", :end-column 52, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 150, :end-line 150, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, has-play-by-play {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/src/mokepon/tests.cljs", :line 27, :column 7, :end-line 27, :end-column 23, :arglists (quote ([message]))}, :name mokepon.tests/has-play-by-play, :variadic false, :file "/Users/amiralirajan/Projects/mokepon/src/mokepon/tests.cljs", :end-column 23, :method-params ([message]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 1, :fn-var true, :arglists (quote ([message]))}, capturing-wild-mokepon {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/src/mokepon/tests.cljs", :line 65, :column 10, :end-line 65, :end-column 32}, :name mokepon.tests/capturing-wild-mokepon, :variadic false, :file "/Users/amiralirajan/Projects/mokepon/src/mokepon/tests.cljs", :end-column 32, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 65, :end-line 65, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, choosing-mokepon-within-battle {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/src/mokepon/tests.cljs", :line 184, :column 10, :end-line 184, :end-column 40}, :name mokepon.tests/choosing-mokepon-within-battle, :variadic false, :file "/Users/amiralirajan/Projects/mokepon/src/mokepon/tests.cljs", :end-column 40, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 184, :end-line 184, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, electric-only-does-half-damage-to-grass {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/src/mokepon/tests.cljs", :line 120, :column 10, :end-line 120, :end-column 49}, :name mokepon.tests/electric-only-does-half-damage-to-grass, :variadic false, :file "/Users/amiralirajan/Projects/mokepon/src/mokepon/tests.cljs", :end-column 49, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 120, :end-line 120, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, log-state {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/src/mokepon/tests.cljs", :line 33, :column 7, :end-line 33, :end-column 16, :arglists (quote ([& path])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(path)], :arglists ([& path]), :arglists-meta (nil)}}, :name mokepon.tests/log-state, :variadic true, :file "/Users/amiralirajan/Projects/mokepon/src/mokepon/tests.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(path)], :arglists ([& path]), :arglists-meta (nil)}, :method-params [(path)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 0, :fn-var true, :arglists ([& path])}, set-cash {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/src/mokepon/tests.cljs", :line 24, :column 7, :end-line 24, :end-column 15, :arglists (quote ([amount]))}, :name mokepon.tests/set-cash, :variadic false, :file "/Users/amiralirajan/Projects/mokepon/src/mokepon/tests.cljs", :end-column 15, :method-params ([amount]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 1, :fn-var true, :arglists (quote ([amount]))}, make-enemy-attack-ready {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/src/mokepon/tests.cljs", :line 19, :column 7, :end-line 19, :end-column 30, :arglists (quote ([]))}, :name mokepon.tests/make-enemy-attack-ready, :variadic false, :file "/Users/amiralirajan/Projects/mokepon/src/mokepon/tests.cljs", :end-column 30, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, cljs-test-each-fixtures {:name mokepon.tests/cljs-test-each-fixtures, :meta {:file nil}, :file "/Users/amiralirajan/Projects/mokepon/src/mokepon/tests.cljs", :line 17, :column 1}, battle-is-over-if-mokepon-is-captured {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/src/mokepon/tests.cljs", :line 94, :column 10, :end-line 94, :end-column 47}, :name mokepon.tests/battle-is-over-if-mokepon-is-captured, :variadic false, :file "/Users/amiralirajan/Projects/mokepon/src/mokepon/tests.cljs", :end-column 47, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 94, :end-line 94, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, reset-game {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/src/mokepon/tests.cljs", :line 13, :column 7, :end-line 13, :end-column 17, :arglists (quote ([]))}, :name mokepon.tests/reset-game, :variadic false, :file "/Users/amiralirajan/Projects/mokepon/src/mokepon/tests.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, get-state {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/src/mokepon/tests.cljs", :line 30, :column 7, :end-line 30, :end-column 16, :arglists (quote ([& path])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(path)], :arglists ([& path]), :arglists-meta (nil)}}, :name mokepon.tests/get-state, :variadic true, :file "/Users/amiralirajan/Projects/mokepon/src/mokepon/tests.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(path)], :arglists ([& path]), :arglists-meta (nil)}, :method-params [(path)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 0, :fn-var true, :arglists ([& path])}, ground-mokepon-are-immune-to-electric {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/src/mokepon/tests.cljs", :line 136, :column 10, :end-line 136, :end-column 47}, :name mokepon.tests/ground-mokepon-are-immune-to-electric, :variadic false, :file "/Users/amiralirajan/Projects/mokepon/src/mokepon/tests.cljs", :end-column 47, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 136, :end-line 136, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, ground-mokepon-do-double-damage-to-electric {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/src/mokepon/tests.cljs", :line 128, :column 10, :end-line 128, :end-column 53}, :name mokepon.tests/ground-mokepon-do-double-damage-to-electric, :variadic false, :file "/Users/amiralirajan/Projects/mokepon/src/mokepon/tests.cljs", :end-column 53, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 128, :end-line 128, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, state {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/src/mokepon/tests.cljs", :line 8, :column 7, :end-line 8, :end-column 12, :arglists (quote ([]))}, :name mokepon.tests/state, :variadic false, :file "/Users/amiralirajan/Projects/mokepon/src/mokepon/tests.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, being-attacked {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/src/mokepon/tests.cljs", :line 36, :column 10, :end-line 36, :end-column 24}, :name mokepon.tests/being-attacked, :variadic false, :file "/Users/amiralirajan/Projects/mokepon/src/mokepon/tests.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 36, :end-line 36, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, looking-for-trouble-chooses-first-monster-on-team {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/src/mokepon/tests.cljs", :line 158, :column 10, :end-line 158, :end-column 59}, :name mokepon.tests/looking-for-trouble-chooses-first-monster-on-team, :variadic false, :file "/Users/amiralirajan/Projects/mokepon/src/mokepon/tests.cljs", :end-column 59, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 158, :end-line 158, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, battle-doesnt-end-until-all-of-team-is-dead {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/src/mokepon/tests.cljs", :line 165, :column 10, :end-line 165, :end-column 53}, :name mokepon.tests/battle-doesnt-end-until-all-of-team-is-dead, :variadic false, :file "/Users/amiralirajan/Projects/mokepon/src/mokepon/tests.cljs", :end-column 53, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 165, :end-line 165, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, healing-team {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/src/mokepon/tests.cljs", :line 57, :column 10, :end-line 57, :end-column 22}, :name mokepon.tests/healing-team, :variadic false, :file "/Users/amiralirajan/Projects/mokepon/src/mokepon/tests.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 57, :end-line 57, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, being-killed {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/src/mokepon/tests.cljs", :line 44, :column 10, :end-line 44, :end-column 22}, :name mokepon.tests/being-killed, :variadic false, :file "/Users/amiralirajan/Projects/mokepon/src/mokepon/tests.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 44, :end-line 44, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, run-tests {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/src/mokepon/tests.cljs", :line 205, :column 7, :end-line 205, :end-column 16, :arglists (quote ([]))}, :name mokepon.tests/run-tests, :variadic false, :file "/Users/amiralirajan/Projects/mokepon/src/mokepon/tests.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 205, :end-line 205, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, electric-mokepon-do-double-damage-to-water {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/src/mokepon/tests.cljs", :line 143, :column 10, :end-line 143, :end-column 52}, :name mokepon.tests/electric-mokepon-do-double-damage-to-water, :variadic false, :file "/Users/amiralirajan/Projects/mokepon/src/mokepon/tests.cljs", :end-column 52, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 143, :end-line 143, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, not-enough-cash-to-buy-item {:protocol-inline nil, :meta {:file "/Users/amiralirajan/Projects/mokepon/src/mokepon/tests.cljs", :line 113, :column 10, :end-line 113, :end-column 37}, :name mokepon.tests/not-enough-cash-to-buy-item, :variadic false, :file "/Users/amiralirajan/Projects/mokepon/src/mokepon/tests.cljs", :end-column 37, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 113, :end-line 113, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}}, :require-macros {cljs.test cljs.test}, :cljs.analyzer/constants {:seen #{purchasing-item mokepon.tests :sulbabaur dissoc = mokepon.tests/battle-is-over-if-mokepon-is-captured water-mokepon-do-normal-damage-to-electric rpg/choosable-monsters message rpg/battle-over? mokepon.tests/purchasing-item capturing-wild-mokepon :report-counters mokepon.tests/electric-mokepon-do-double-damage-to-water choosing-mokepon-within-battle :deogude electric-only-does-half-damage-to-grass :captured :ns :max-hp :name :each-fixtures mokepon.tests/choosing-mokepon-within-battle :file :end-column tnr/team-count :type :play-by-play :battling mokepon.tests/ground-mokepon-are-immune-to-electric :cash battle-is-over-if-mokepon-is-captured rpg/heal-team :column mokepon.tests/looking-for-trouble-chooses-first-monster-on-team get-state :summary :chipu :power mokepon.tests/electric-only-does-half-damage-to-grass some :forest :fail rpg/active-turn-threshold tnr/item-count ground-mokepon-are-immune-to-electric :team :line :end-run-tests not mokepon.tests/not-enough-cash-to-buy-item ground-mokepon-do-double-damage-to-electric state mokepon.tests/being-killed :at being-attacked :expected looking-for-trouble-chooses-first-monster-on-team battle-doesnt-end-until-all-of-team-is-dead :end-line healing-team :begin-test-ns :mokebox :error rpg/is-dead? mokepon.tests/healing-team :pass :hp tnr/chosen-monster mokepon.tests/ground-mokepon-do-double-damage-to-electric :arglists being-killed mokepon.tests/being-attacked :actual :doc mokepon.tests/capturing-wild-mokepon :before mokepon.tests/battle-doesnt-end-until-all-of-team-is-dead :end-test-ns :chosen-key electric-mokepon-do-double-damage-to-water :test not-enough-cash-to-buy-item mokepon.tests/water-mokepon-do-normal-damage-to-electric :message}, :order [:before :battling :at :cash :type :expected :actual :message :error some message :play-by-play state :pass :fail not :chipu = :hp tnr/chosen-monster mokepon.tests/being-attacked :ns :name :file :end-column :column :line :end-line :arglists :doc :test mokepon.tests being-attacked :team :sulbabaur tnr/team-count mokepon.tests/being-killed being-killed rpg/heal-team :deogude :max-hp mokepon.tests/healing-team healing-team tnr/item-count :mokebox get-state dissoc :captured mokepon.tests/capturing-wild-mokepon capturing-wild-mokepon rpg/battle-over? mokepon.tests/battle-is-over-if-mokepon-is-captured battle-is-over-if-mokepon-is-captured mokepon.tests/purchasing-item purchasing-item mokepon.tests/not-enough-cash-to-buy-item not-enough-cash-to-buy-item mokepon.tests/electric-only-does-half-damage-to-grass electric-only-does-half-damage-to-grass mokepon.tests/ground-mokepon-do-double-damage-to-electric ground-mokepon-do-double-damage-to-electric mokepon.tests/ground-mokepon-are-immune-to-electric ground-mokepon-are-immune-to-electric mokepon.tests/electric-mokepon-do-double-damage-to-water electric-mokepon-do-double-damage-to-water mokepon.tests/water-mokepon-do-normal-damage-to-electric water-mokepon-do-normal-damage-to-electric :forest mokepon.tests/looking-for-trouble-chooses-first-monster-on-team looking-for-trouble-chooses-first-monster-on-team :power rpg/is-dead? mokepon.tests/battle-doesnt-end-until-all-of-team-is-dead battle-doesnt-end-until-all-of-team-is-dead rpg/choosable-monsters :chosen-key rpg/active-turn-threshold mokepon.tests/choosing-mokepon-within-battle choosing-mokepon-within-battle :summary :begin-test-ns :each-fixtures :end-test-ns :report-counters :end-run-tests]}, :doc nil}